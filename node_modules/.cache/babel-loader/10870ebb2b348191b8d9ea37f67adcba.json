{"ast":null,"code":"import{FETCH_ESTIMATE,FETCH_ESTIMATE_SUCCESS,FETCH_ESTIMATE_FAILED,CLEAR_ESTIMATE}from\"../store/types\";import Polyline from'@mapbox/polyline';import{firebase}from'../config/configureFirebase';import{FareCalculator}from'../other/FareCalculator';import{onValue}from\"firebase/database\";export const getEstimate=bookingData=>async dispatch=>{const{settingsRef}=firebase;dispatch({type:FETCH_ESTIMATE,payload:bookingData});let res=bookingData.routeDetails;if(res){let points=Polyline.decode(res.polylinePoints);let waypoints=points.map(point=>{return{latitude:point[0],longitude:point[1]};});onValue(settingsRef,settingdata=>{let settings=settingdata.val();let distance=settings.convert_to_mile?res.distance_in_km/1.609344:res.distance_in_km;let{totalCost,grandTotal,convenience_fees}=FareCalculator(distance,res.time_in_secs,bookingData.carDetails,bookingData.instructionData,settings.decimal);dispatch({type:FETCH_ESTIMATE_SUCCESS,payload:{pickup:bookingData.pickup,drop:bookingData.drop,carDetails:bookingData.carDetails,instructionData:bookingData.instructionData,estimateDistance:parseFloat(distance).toFixed(settings.decimal),fareCost:totalCost?parseFloat(totalCost).toFixed(settings.decimal):0,estimateFare:grandTotal?parseFloat(grandTotal).toFixed(settings.decimal):0,estimateTime:res.time_in_secs,convenience_fees:convenience_fees?parseFloat(convenience_fees).toFixed(settings.decimal):0,waypoints:waypoints}});},{onlyOnce:true});}else{dispatch({type:FETCH_ESTIMATE_FAILED,payload:\"No Route Found\"});}};export const clearEstimate=()=>dispatch=>{dispatch({type:CLEAR_ESTIMATE,payload:null});};","map":{"version":3,"names":["FETCH_ESTIMATE","FETCH_ESTIMATE_SUCCESS","FETCH_ESTIMATE_FAILED","CLEAR_ESTIMATE","Polyline","firebase","FareCalculator","onValue","getEstimate","bookingData","dispatch","settingsRef","type","payload","res","routeDetails","points","decode","polylinePoints","waypoints","map","point","latitude","longitude","settingdata","settings","val","distance","convert_to_mile","distance_in_km","totalCost","grandTotal","convenience_fees","time_in_secs","carDetails","instructionData","decimal","pickup","drop","estimateDistance","parseFloat","toFixed","fareCost","estimateFare","estimateTime","onlyOnce","clearEstimate"],"sources":["C:/Users/CAJAL/Desktop/main/Sourcecode/common/src/actions/estimateactions.js"],"sourcesContent":["import {\n  FETCH_ESTIMATE,\n  FETCH_ESTIMATE_SUCCESS,\n  FETCH_ESTIMATE_FAILED,\n  CLEAR_ESTIMATE\n} from \"../store/types\";\nimport Polyline from '@mapbox/polyline';\nimport { firebase } from '../config/configureFirebase';\nimport { FareCalculator } from '../other/FareCalculator';\nimport { onValue } from \"firebase/database\";\n\nexport const getEstimate = (bookingData) => async (dispatch) => {\n  const   {\n      settingsRef\n  } = firebase;\n\n  dispatch({\n    type: FETCH_ESTIMATE,\n    payload: bookingData,\n  });\n          \n\n  let res = bookingData.routeDetails;\n\n  if(res){\n    let points = Polyline.decode(res.polylinePoints);\n\n    let waypoints = points.map((point) => {\n        return {\n            latitude: point[0],\n            longitude: point[1]\n        }\n    });\n    \n    onValue(settingsRef, settingdata => {\n      let settings = settingdata.val();\n      let distance = settings.convert_to_mile? (res.distance_in_km / 1.609344) : res.distance_in_km;\n\n     let {totalCost, grandTotal, convenience_fees} = FareCalculator(distance, res.time_in_secs, bookingData.carDetails, bookingData.instructionData, settings.decimal);\n     \n      dispatch({\n        type: FETCH_ESTIMATE_SUCCESS,\n        payload: {\n          pickup:bookingData.pickup,\n          drop:bookingData.drop,\n          carDetails:bookingData.carDetails,\n          instructionData: bookingData.instructionData,\n          estimateDistance: parseFloat(distance).toFixed(settings.decimal),\n          fareCost: totalCost ? parseFloat(totalCost).toFixed(settings.decimal) : 0,\n          estimateFare: grandTotal ? parseFloat(grandTotal).toFixed(settings.decimal) : 0,\n          estimateTime:res.time_in_secs,\n          convenience_fees: convenience_fees ? parseFloat(convenience_fees).toFixed(settings.decimal) : 0,\n          waypoints: waypoints\n        },\n      });\n    }, {onlyOnce:true});\n  }else{\n    dispatch({\n      type: FETCH_ESTIMATE_FAILED,\n      payload: \"No Route Found\",\n    });\n  }\n\n}\n\nexport const clearEstimate = () => (dispatch) => {\n    dispatch({\n        type: CLEAR_ESTIMATE,\n        payload: null,\n    });    \n}\n"],"mappings":"AAAA,OACEA,cAAc,CACdC,sBAAsB,CACtBC,qBAAqB,CACrBC,cAAc,KACT,gBAAgB,CACvB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,OAASC,QAAQ,KAAQ,6BAA6B,CACtD,OAASC,cAAc,KAAQ,yBAAyB,CACxD,OAASC,OAAO,KAAQ,mBAAmB,CAE3C,MAAO,MAAM,CAAAC,WAAW,CAAIC,WAAW,EAAK,KAAO,CAAAC,QAAQ,EAAK,CAC9D,KAAQ,CACJC,WACJ,CAAC,CAAGN,QAAQ,CAEZK,QAAQ,CAAC,CACPE,IAAI,CAAEZ,cAAc,CACpBa,OAAO,CAAEJ,WACX,CAAC,CAAC,CAGF,GAAI,CAAAK,GAAG,CAAGL,WAAW,CAACM,YAAY,CAElC,GAAGD,GAAG,CAAC,CACL,GAAI,CAAAE,MAAM,CAAGZ,QAAQ,CAACa,MAAM,CAACH,GAAG,CAACI,cAAc,CAAC,CAEhD,GAAI,CAAAC,SAAS,CAAGH,MAAM,CAACI,GAAG,CAAEC,KAAK,EAAK,CAClC,MAAO,CACHC,QAAQ,CAAED,KAAK,CAAC,CAAC,CAAC,CAClBE,SAAS,CAAEF,KAAK,CAAC,CAAC,CACtB,CAAC,CACL,CAAC,CAAC,CAEFd,OAAO,CAACI,WAAW,CAAEa,WAAW,EAAI,CAClC,GAAI,CAAAC,QAAQ,CAAGD,WAAW,CAACE,GAAG,CAAC,CAAC,CAChC,GAAI,CAAAC,QAAQ,CAAGF,QAAQ,CAACG,eAAe,CAAGd,GAAG,CAACe,cAAc,CAAG,QAAQ,CAAIf,GAAG,CAACe,cAAc,CAE9F,GAAI,CAACC,SAAS,CAAEC,UAAU,CAAEC,gBAAgB,CAAC,CAAG1B,cAAc,CAACqB,QAAQ,CAAEb,GAAG,CAACmB,YAAY,CAAExB,WAAW,CAACyB,UAAU,CAAEzB,WAAW,CAAC0B,eAAe,CAAEV,QAAQ,CAACW,OAAO,CAAC,CAEhK1B,QAAQ,CAAC,CACPE,IAAI,CAAEX,sBAAsB,CAC5BY,OAAO,CAAE,CACPwB,MAAM,CAAC5B,WAAW,CAAC4B,MAAM,CACzBC,IAAI,CAAC7B,WAAW,CAAC6B,IAAI,CACrBJ,UAAU,CAACzB,WAAW,CAACyB,UAAU,CACjCC,eAAe,CAAE1B,WAAW,CAAC0B,eAAe,CAC5CI,gBAAgB,CAAEC,UAAU,CAACb,QAAQ,CAAC,CAACc,OAAO,CAAChB,QAAQ,CAACW,OAAO,CAAC,CAChEM,QAAQ,CAAEZ,SAAS,CAAGU,UAAU,CAACV,SAAS,CAAC,CAACW,OAAO,CAAChB,QAAQ,CAACW,OAAO,CAAC,CAAG,CAAC,CACzEO,YAAY,CAAEZ,UAAU,CAAGS,UAAU,CAACT,UAAU,CAAC,CAACU,OAAO,CAAChB,QAAQ,CAACW,OAAO,CAAC,CAAG,CAAC,CAC/EQ,YAAY,CAAC9B,GAAG,CAACmB,YAAY,CAC7BD,gBAAgB,CAAEA,gBAAgB,CAAGQ,UAAU,CAACR,gBAAgB,CAAC,CAACS,OAAO,CAAChB,QAAQ,CAACW,OAAO,CAAC,CAAG,CAAC,CAC/FjB,SAAS,CAAEA,SACb,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,CAAC0B,QAAQ,CAAC,IAAI,CAAC,CAAC,CACrB,CAAC,IAAI,CACHnC,QAAQ,CAAC,CACPE,IAAI,CAAEV,qBAAqB,CAC3BW,OAAO,CAAE,gBACX,CAAC,CAAC,CACJ,CAEF,CAAC,CAED,MAAO,MAAM,CAAAiC,aAAa,CAAGA,CAAA,GAAOpC,QAAQ,EAAK,CAC7CA,QAAQ,CAAC,CACLE,IAAI,CAAET,cAAc,CACpBU,OAAO,CAAE,IACb,CAAC,CAAC,CACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}