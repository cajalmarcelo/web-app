{"ast":null,"code":"export const GetDistance=(lat1,lon1,lat2,lon2)=>{if(lat1===lat2&&lon1===lon2){return 0;}else{var radlat1=Math.PI*lat1/180;var radlat2=Math.PI*lat2/180;var theta=lon1-lon2;var radtheta=Math.PI*theta/180;var dist=Math.sin(radlat1)*Math.sin(radlat2)+Math.cos(radlat1)*Math.cos(radlat2)*Math.cos(radtheta);if(dist>1){dist=1;}dist=Math.acos(dist);dist=dist*180/Math.PI;dist=dist*60*1.1515;dist=dist*1.609344;return dist;}};export const GetTripDistance=async data=>{if(data){const arr=Object.keys(data).filter(function(i){return data[i].status=='STARTED'||data[i].status=='REACHED';}).map(i=>{data[i].id=i;return data[i];});let distance=0;let coords=[];try{if(arr.length==0||arr.length==1){distance=0;}else if(arr.length==2){distance=GetDistance(arr[0].lat,arr[0].lng,arr[1].lat,arr[1].lng);coords.push({latitude:arr[0].lat,longitude:arr[0].lng});coords.push({latitude:arr[1].lat,longitude:arr[1].lng});}else{for(let i=0;i<arr.length-1;i++){distance=distance+GetDistance(arr[i].lat,arr[i].lng,arr[i+1].lat,arr[i+1].lng);coords.push({latitude:arr[i].lat,longitude:arr[i].lng});}coords.push({latitude:arr[arr.length-1].lat,longitude:arr[arr.length-1].lng});}}catch(error){console.log(error);}return{distance:distance,coords:coords};}else{return{distance:0,coords:[]};}};","map":{"version":3,"names":["GetDistance","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","GetTripDistance","data","arr","Object","keys","filter","i","status","map","id","distance","coords","length","lat","lng","push","latitude","longitude","error","console","log"],"sources":["C:/Users/CAJAL/Desktop/main/Sourcecode/common/src/other/GeoFunctions.js"],"sourcesContent":["export const GetDistance = (lat1, lon1, lat2, lon2) => {\n    if ((lat1 === lat2) && (lon1 === lon2)) {\n        return 0;\n    }\n    else {\n        var radlat1 = Math.PI * lat1 / 180;\n        var radlat2 = Math.PI * lat2 / 180;\n        var theta = lon1 - lon2;\n        var radtheta = Math.PI * theta / 180;\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n        if (dist > 1) {\n            dist = 1;\n        }\n        dist = Math.acos(dist);\n        dist = dist * 180 / Math.PI;\n        dist = dist * 60 * 1.1515;\n        dist = dist * 1.609344;\n        return dist;\n    }\n};\n\nexport const GetTripDistance = async (data) => {\n    if (data) {\n        const arr = Object.keys(data)\n            .filter(function (i) {\n                return data[i].status == 'STARTED' || data[i].status == 'REACHED'\n            })\n            .map(i => {\n                data[i].id = i\n                return data[i]\n            });\n        let distance = 0;\n        let coords = [];\n        try{\n            if (arr.length == 0 || arr.length == 1) {\n                distance = 0;\n            } else if (arr.length == 2) {\n                distance = GetDistance(arr[0].lat, arr[0].lng, arr[1].lat, arr[1].lng);\n                coords.push({latitude : arr[0].lat, longitude : arr[0].lng});\n                coords.push({latitude : arr[1].lat, longitude : arr[1].lng});\n            } else {\n                for (let i = 0; i < (arr.length - 1); i++) {\n                    distance = distance + GetDistance(arr[i].lat, arr[i].lng, arr[i + 1].lat, arr[i + 1].lng)\n                    coords.push({latitude : arr[i].lat, longitude : arr[i].lng});\n                }\n                coords.push({latitude : arr[arr.length - 1].lat, longitude : arr[arr.length - 1].lng});\n            }\n        }catch(error){\n            console.log(error);\n        }\n        return {\n            distance:distance ,\n            coords: coords\n        };\n    }\n    else {\n        return {\n            distance:0,\n            coords:[]\n        };\n    }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}