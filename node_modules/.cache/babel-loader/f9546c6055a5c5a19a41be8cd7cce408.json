{"ast":null,"code":"import{FETCH_CAR_TYPES,FETCH_CAR_TYPES_SUCCESS,FETCH_CAR_TYPES_FAILED,EDIT_CAR_TYPE}from\"../store/types\";import store from'../store/store';import{firebase}from'../config/configureFirebase';import{onValue,set,remove,push}from\"firebase/database\";import{uploadBytesResumable,getDownloadURL}from\"firebase/storage\";export const fetchCarTypes=()=>dispatch=>{const{carTypesRef}=firebase;dispatch({type:FETCH_CAR_TYPES,payload:null});onValue(carTypesRef,snapshot=>{if(snapshot.val()){let data=snapshot.val();const arr=Object.keys(data).map(i=>{data[i].id=i;return data[i];});dispatch({type:FETCH_CAR_TYPES_SUCCESS,payload:arr});}else{dispatch({type:FETCH_CAR_TYPES_FAILED,payload:store.getState().languagedata.defaultLanguage.no_cars});}});};export const editCarType=(cartype,method)=>async dispatch=>{const{carTypesRef,carTypesEditRef,carDocImage}=firebase;dispatch({type:EDIT_CAR_TYPE,payload:{method,cartype}});if(method==='Add'){push(carTypesRef,cartype);}else if(method==='Delete'){remove(carTypesEditRef(cartype.id));}else if(method==='UpdateImage'){await uploadBytesResumable(carDocImage(cartype.id),cartype.image);let image=await getDownloadURL(carDocImage(cartype.id));let data=cartype;data.image=image;set(carTypesEditRef(cartype.id),data);}else{set(carTypesEditRef(cartype.id),cartype);}};","map":{"version":3,"names":["FETCH_CAR_TYPES","FETCH_CAR_TYPES_SUCCESS","FETCH_CAR_TYPES_FAILED","EDIT_CAR_TYPE","store","firebase","onValue","set","remove","push","uploadBytesResumable","getDownloadURL","fetchCarTypes","dispatch","carTypesRef","type","payload","snapshot","val","data","arr","Object","keys","map","i","id","getState","languagedata","defaultLanguage","no_cars","editCarType","cartype","method","carTypesEditRef","carDocImage","image"],"sources":["C:/Users/CAJAL/Desktop/main/Sourcecode/common/src/actions/cartypeactions.js"],"sourcesContent":["import {\n  FETCH_CAR_TYPES,\n  FETCH_CAR_TYPES_SUCCESS,\n  FETCH_CAR_TYPES_FAILED,\n  EDIT_CAR_TYPE\n} from \"../store/types\";\nimport store from '../store/store';\nimport { firebase } from '../config/configureFirebase';\nimport { onValue, set ,remove, push } from \"firebase/database\";\nimport { uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\n\nexport const fetchCarTypes = () => (dispatch) => {\n\n  const {\n    carTypesRef\n  } = firebase;\n\n  dispatch({\n    type: FETCH_CAR_TYPES,\n    payload: null\n  });\n  onValue(carTypesRef, snapshot => {\n    if (snapshot.val()) {\n      let data = snapshot.val();\n      const arr = Object.keys(data).map(i => {\n        data[i].id = i;\n        return data[i]\n      });\n      dispatch({\n        type: FETCH_CAR_TYPES_SUCCESS,\n        payload: arr\n      });\n    } else {\n      dispatch({\n        type: FETCH_CAR_TYPES_FAILED,\n        payload: store.getState().languagedata.defaultLanguage.no_cars\n      });\n    }\n  });\n};\n\nexport const editCarType = (cartype, method) => async (dispatch) => {\n  const {\n    carTypesRef, \n    carTypesEditRef,\n    carDocImage\n  } = firebase;\n  dispatch({\n    type: EDIT_CAR_TYPE,\n    payload: { method, cartype }\n  });\n  if (method === 'Add') {\n    push(carTypesRef, cartype);\n  } else if (method === 'Delete') {\n    remove(carTypesEditRef(cartype.id));\n  } else if (method === 'UpdateImage') {\n    await uploadBytesResumable(carDocImage(cartype.id), cartype.image);\n    let image = await getDownloadURL(carDocImage(cartype.id));\n      let data = cartype;\n      data.image = image;\n    set(carTypesEditRef(cartype.id), data);\n  }\n   else {\n    set(carTypesEditRef(cartype.id), cartype);\n  }\n}"],"mappings":"AAAA,OACEA,eAAe,CACfC,uBAAuB,CACvBC,sBAAsB,CACtBC,aAAa,KACR,gBAAgB,CACvB,MAAO,CAAAC,KAAK,KAAM,gBAAgB,CAClC,OAASC,QAAQ,KAAQ,6BAA6B,CACtD,OAASC,OAAO,CAAEC,GAAG,CAAEC,MAAM,CAAEC,IAAI,KAAQ,mBAAmB,CAC9D,OAASC,oBAAoB,CAAEC,cAAc,KAAQ,kBAAkB,CAEvE,MAAO,MAAM,CAAAC,aAAa,CAAGA,CAAA,GAAOC,QAAQ,EAAK,CAE/C,KAAM,CACJC,WACF,CAAC,CAAGT,QAAQ,CAEZQ,QAAQ,CAAC,CACPE,IAAI,CAAEf,eAAe,CACrBgB,OAAO,CAAE,IACX,CAAC,CAAC,CACFV,OAAO,CAACQ,WAAW,CAAEG,QAAQ,EAAI,CAC/B,GAAIA,QAAQ,CAACC,GAAG,CAAC,CAAC,CAAE,CAClB,GAAI,CAAAC,IAAI,CAAGF,QAAQ,CAACC,GAAG,CAAC,CAAC,CACzB,KAAM,CAAAE,GAAG,CAAGC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,GAAG,CAACC,CAAC,EAAI,CACrCL,IAAI,CAACK,CAAC,CAAC,CAACC,EAAE,CAAGD,CAAC,CACd,MAAO,CAAAL,IAAI,CAACK,CAAC,CAAC,CAChB,CAAC,CAAC,CACFX,QAAQ,CAAC,CACPE,IAAI,CAAEd,uBAAuB,CAC7Be,OAAO,CAAEI,GACX,CAAC,CAAC,CACJ,CAAC,IAAM,CACLP,QAAQ,CAAC,CACPE,IAAI,CAAEb,sBAAsB,CAC5Bc,OAAO,CAAEZ,KAAK,CAACsB,QAAQ,CAAC,CAAC,CAACC,YAAY,CAACC,eAAe,CAACC,OACzD,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAACC,OAAO,CAAEC,MAAM,GAAK,KAAO,CAAAnB,QAAQ,EAAK,CAClE,KAAM,CACJC,WAAW,CACXmB,eAAe,CACfC,WACF,CAAC,CAAG7B,QAAQ,CACZQ,QAAQ,CAAC,CACPE,IAAI,CAAEZ,aAAa,CACnBa,OAAO,CAAE,CAAEgB,MAAM,CAAED,OAAQ,CAC7B,CAAC,CAAC,CACF,GAAIC,MAAM,GAAK,KAAK,CAAE,CACpBvB,IAAI,CAACK,WAAW,CAAEiB,OAAO,CAAC,CAC5B,CAAC,IAAM,IAAIC,MAAM,GAAK,QAAQ,CAAE,CAC9BxB,MAAM,CAACyB,eAAe,CAACF,OAAO,CAACN,EAAE,CAAC,CAAC,CACrC,CAAC,IAAM,IAAIO,MAAM,GAAK,aAAa,CAAE,CACnC,KAAM,CAAAtB,oBAAoB,CAACwB,WAAW,CAACH,OAAO,CAACN,EAAE,CAAC,CAAEM,OAAO,CAACI,KAAK,CAAC,CAClE,GAAI,CAAAA,KAAK,CAAG,KAAM,CAAAxB,cAAc,CAACuB,WAAW,CAACH,OAAO,CAACN,EAAE,CAAC,CAAC,CACvD,GAAI,CAAAN,IAAI,CAAGY,OAAO,CAClBZ,IAAI,CAACgB,KAAK,CAAGA,KAAK,CACpB5B,GAAG,CAAC0B,eAAe,CAACF,OAAO,CAACN,EAAE,CAAC,CAAEN,IAAI,CAAC,CACxC,CAAC,IACK,CACJZ,GAAG,CAAC0B,eAAe,CAACF,OAAO,CAACN,EAAE,CAAC,CAAEM,OAAO,CAAC,CAC3C,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}