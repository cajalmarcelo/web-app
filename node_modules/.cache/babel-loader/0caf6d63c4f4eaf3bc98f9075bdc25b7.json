{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = void 0;\nconst utils_1 = require(\"./utils\");\n// **`parse()` - Parse a UUID into it's component bytes**\nconst parse = (s, buf, offset) => {\n  let i = buf && offset || 0;\n  let ii = 0;\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, oct => {\n    // Don't overflow!\n    if (ii < 16 && buf) {\n      buf[i + ii++] = utils_1.hexToByte[oct];\n    }\n    return '';\n  });\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n  return buf;\n};\nexports.parse = parse;","map":{"version":3,"names":["utils_1","require","parse","s","buf","offset","i","ii","toLowerCase","replace","oct","hexToByte","exports"],"sources":["../src/parse.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AAEA;AACO,MAAMC,KAAK,GAAGA,CAACC,CAAS,EAAEC,GAAmB,EAAEC,MAAe,KAAI;EACvE,IAAIC,CAAC,GAAIF,GAAG,IAAIC,MAAM,IAAK,CAAC;EAC5B,IAAIE,EAAE,GAAG,CAAC;EAEVH,GAAG,GAAGA,GAAG,IAAI,EAAE;EACfD,CAAC,CAACK,WAAW,EAAE,CAACC,OAAO,CAAC,cAAc,EAAGC,GAAW,IAAI;IACtD;IACA,IAAIH,EAAE,GAAG,EAAE,IAAIH,GAAG,EAAE;MAClBA,GAAG,CAACE,CAAC,GAAGC,EAAE,EAAE,CAAC,GAAGP,OAAA,CAAAW,SAAS,CAACD,GAAG,CAAC;IAChC;IAEA,OAAO,EAAE;EACX,CAAC,CAAC;EAEF;EACA,OAAOH,EAAE,GAAG,EAAE,EAAE;IACdH,GAAG,CAACE,CAAC,GAAGC,EAAE,EAAE,CAAC,GAAG,CAAC;EACnB;EAEA,OAAOH,GAAG;AACZ,CAAC;AApBYQ,OAAA,CAAAV,KAAK,GAAAA,KAAA","ignoreList":[]},"metadata":{},"sourceType":"script"}