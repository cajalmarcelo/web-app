{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.v35 = void 0;\n/* eslint-disable no-bitwise */\nconst stringify_1 = require(\"./stringify\");\nconst parse_1 = require(\"./parse\");\nconst utils_1 = require(\"./utils\");\nconst v35 = (name, version, hashfunc) => {\n  const generateUUID = function (value, namespace, buf) {\n    let offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    if (typeof value === 'string') {\n      value = (0, utils_1.stringToBytes)(value);\n    }\n    if (typeof namespace === 'string') {\n      namespace = (0, parse_1.parse)(namespace);\n    }\n    if (namespace && namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    }\n    // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g.\n    // `bytes = hashfunc([...namespace, ... value])`\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = (0, utils_1.stringToBytes)(hashfunc((0, utils_1.bytesToString)(bytes)));\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n    if (buf) {\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n    }\n    return buf ? buf : (0, stringify_1.stringify)(bytes);\n  };\n  return generateUUID;\n};\nexports.v35 = v35;","map":{"version":3,"names":["stringify_1","require","parse_1","utils_1","v35","name","version","hashfunc","generateUUID","value","namespace","buf","offset","arguments","length","undefined","stringToBytes","parse","TypeError","bytes","Uint8Array","set","bytesToString","i","stringify","exports"],"sources":["../src/v35.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA;AACA,MAAAA,WAAA,GAAAC,OAAA;AACA,MAAAC,OAAA,GAAAD,OAAA;AACA,MAAAE,OAAA,GAAAF,OAAA;AASO,MAAMG,GAAG,GAAGA,CACjBC,IAAY,EACZC,OAAe,EACfC,QAA+B,KACf;EAChB,MAAMC,YAAY,GAAG,SAAAA,CACnBC,KAA0B,EAC1BC,SAA4B,EAC5BC,GAAc,EAEO;IAAA,IADrBC,MAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,CAAC;IAElB,IAAI,OAAOJ,KAAK,KAAK,QAAQ,EAAE;MAC7BA,KAAK,GAAG,IAAAN,OAAA,CAAAa,aAAa,EAACP,KAAK,CAAC;IAC9B;IAEA,IAAI,OAAOC,SAAS,KAAK,QAAQ,EAAE;MACjCA,SAAS,GAAG,IAAAR,OAAA,CAAAe,KAAK,EAACP,SAAS,CAAC;IAC9B;IAEA,IAAIA,SAAS,IAAIA,SAAS,CAACI,MAAM,KAAK,EAAE,EAAE;MACxC,MAAMI,SAAS,CACb,kEAAkE,CACnE;IACH;IAEA;IACA;IACA;IACA,IAAIC,KAAK,GAAG,IAAIC,UAAU,CAAC,EAAE,GAAGX,KAAK,CAACK,MAAM,CAAC;IAC7CK,KAAK,CAACE,GAAG,CAACX,SAAS,CAAC;IACpBS,KAAK,CAACE,GAAG,CAACZ,KAAK,EAAEC,SAAS,CAACI,MAAM,CAAC;IAClCK,KAAK,GAAG,IAAAhB,OAAA,CAAAa,aAAa,EAACT,QAAQ,CAAC,IAAAJ,OAAA,CAAAmB,aAAa,EAACH,KAAK,CAAC,CAAC,CAAC;IAErDA,KAAK,CAAC,CAAC,CAAC,GAAIA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAIb,OAAO;IACtCa,KAAK,CAAC,CAAC,CAAC,GAAIA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAI,IAAI;IAEnC,IAAIR,GAAG,EAAE;MACP,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAE;QAC3BZ,GAAG,CAACC,MAAM,GAAGW,CAAC,CAAC,GAAGJ,KAAK,CAACI,CAAC,CAAC;MAC5B;IACF;IAEA,OAAOZ,GAAG,GAAGA,GAAG,GAAG,IAAAX,WAAA,CAAAwB,SAAS,EAACL,KAAK,CAAC;EACrC,CAAC;EAED,OAAOX,YAAY;AACrB,CAAC;AA9CYiB,OAAA,CAAArB,GAAG,GAAAA,GAAA","ignoreList":[]},"metadata":{},"sourceType":"script"}