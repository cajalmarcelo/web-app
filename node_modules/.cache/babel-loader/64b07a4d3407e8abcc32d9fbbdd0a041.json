{"ast":null,"code":"import _objectSpread from\"C:/Users/CAJAL/Desktop/main/Sourcecode/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo}from'react';import TextField from'@mui/material/TextField';import{Autocomplete}from'@mui/material';import LocationOnIcon from'@mui/icons-material/LocationOn';import Grid from'@mui/material/Grid';import Typography from'@mui/material/Typography';import{makeStyles}from'@mui/styles';import parse from'autosuggest-highlight/parse';import throttle from'lodash/throttle';import{geocodeByPlaceId}from'react-places-autocomplete';import{useTranslation}from\"react-i18next\";import{useSelector}from\"react-redux\";import Box from'@mui/material/Box';import{MAIN_COLOR,FONT_FAMILY}from\"../common/sharedFunctions\";import{api}from'common';import uuid from'react-native-uuid';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const useStyles=makeStyles(theme=>({icon:{color:theme.palette.text.secondary,marginRight:theme.spacing(2)},inputRtl:{\"& label\":{right:75,left:\"auto\",fontFamily:FONT_FAMILY}},textField:{\"& label.Mui-focused\":{color:MAIN_COLOR},\"& .MuiOutlinedInput-root\":{\"&.Mui-focused fieldset\":{borderColor:MAIN_COLOR}},\"& input\":{fontFamily:FONT_FAMILY}}}));export default function GoogleMapsAutoComplete(props){const classes=useStyles();const[value,setValue]=useState(null);const[inputValue,setInputValue]=useState('');const[options,setOptions]=useState([]);const{t,i18n}=useTranslation();const isRTL=i18n.dir()==='rtl';const settingsdata=useSelector(state=>state.settingsdata);const[settings,setSettings]=useState({});const{fetchPlacesAutocomplete}=api;const[UUID,setUUID]=useState();useEffect(()=>{const uuidv4=uuid.v4();setUUID(uuidv4);return()=>{setUUID(null);};},[]);useEffect(()=>{if(settingsdata.settings){setSettings(settingsdata.settings);}},[settingsdata.settings]);const fetch=useMemo(()=>throttle(async(searchKeyword,callback)=>{if(searchKeyword){const results=await fetchPlacesAutocomplete(searchKeyword,UUID);callback(results||[]);}},200),[fetchPlacesAutocomplete]);useEffect(()=>{let active=true;if(inputValue===''){setOptions(value?[value]:[]);return;}fetch(inputValue,results=>{if(active){let newOptions=value?[value]:[];if(results){newOptions=[...newOptions,...results];}setOptions(newOptions);}});return()=>{active=false;};},[value,inputValue,fetch]);return/*#__PURE__*/_jsx(Autocomplete,{style:props.style,getOptionLabel:option=>typeof option==='string'?option:option.description,filterOptions:x=>x,options:options,autoComplete:true,includeInputInList:true,filterSelectedOptions:true,value:props.value,onChange:(event,newValue)=>{setOptions(newValue?[newValue,...options]:options);setValue(newValue);if(newValue&&newValue.place_id){geocodeByPlaceId(newValue.place_id).then(results=>{if(results.length>0){newValue.coords={lat:results[0].geometry.location.lat(),lng:results[0].geometry.location.lng()};newValue.placeDetails=results[0];}props.onChange(newValue);}).catch(()=>alert(t('google_places_error')));}else{props.onChange(newValue);}},onInputChange:(event,newInputValue)=>{setInputValue(newInputValue);},renderInput:params=>/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:props.placeholder,variant:props.variant,className:[isRTL?classes.inputRtl:'',classes.textField].join(\" \"),fullWidth:true})),renderOption:(props,option)=>/*#__PURE__*/_jsx(\"li\",_objectSpread(_objectSpread({},props),{},{children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,sx:{display:'flex',width:44},children:/*#__PURE__*/_jsx(LocationOnIcon,{sx:{color:'text.secondary'}})}),/*#__PURE__*/_jsx(Grid,{item:true,sx:{width:'calc(100% - 44px)',wordWrap:'break-word'},children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontFamily:FONT_FAMILY},children:option.description||\"No description\"})})]})}))});}","map":{"version":3,"names":["React","useState","useEffect","useMemo","TextField","Autocomplete","LocationOnIcon","Grid","Typography","makeStyles","parse","throttle","geocodeByPlaceId","useTranslation","useSelector","Box","MAIN_COLOR","FONT_FAMILY","api","uuid","jsx","_jsx","jsxs","_jsxs","useStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","inputRtl","right","left","fontFamily","textField","borderColor","GoogleMapsAutoComplete","props","classes","value","setValue","inputValue","setInputValue","options","setOptions","t","i18n","isRTL","dir","settingsdata","state","settings","setSettings","fetchPlacesAutocomplete","UUID","setUUID","uuidv4","v4","fetch","searchKeyword","callback","results","active","newOptions","style","getOptionLabel","option","description","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","onChange","event","newValue","place_id","then","length","coords","lat","geometry","location","lng","placeDetails","catch","alert","onInputChange","newInputValue","renderInput","params","_objectSpread","label","placeholder","variant","className","join","fullWidth","renderOption","children","container","alignItems","item","sx","display","width","wordWrap"],"sources":["C:/Users/CAJAL/Desktop/main/Sourcecode/web-app/src/components/GoogleMapsAutoComplete.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { Autocomplete } from '@mui/material';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { makeStyles } from '@mui/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport throttle from 'lodash/throttle';\nimport { geocodeByPlaceId } from 'react-places-autocomplete';\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport Box from '@mui/material/Box';\nimport { MAIN_COLOR, FONT_FAMILY } from \"../common/sharedFunctions\";\nimport { api } from 'common';\nimport uuid from 'react-native-uuid';\n\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2),\n  },\n  inputRtl: {\n    \"& label\": {\n      right: 75,\n      left: \"auto\",\n      fontFamily: FONT_FAMILY,\n    },\n  },\n  textField: {\n    \"& label.Mui-focused\": {\n      color: MAIN_COLOR,\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"&.Mui-focused fieldset\": {\n        borderColor: MAIN_COLOR,\n      },\n    },\n    \"& input\": {\n      fontFamily: FONT_FAMILY,\n    },\n  },\n}));\n\nexport default function GoogleMapsAutoComplete(props) {\n  const classes = useStyles();\n  const [value, setValue] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [options, setOptions] = useState([]);\n  const { t, i18n } = useTranslation();\n  const isRTL = i18n.dir() === 'rtl';\n  const settingsdata = useSelector(state => state.settingsdata);\n  const [settings, setSettings] = useState({});\n  const {\n    fetchPlacesAutocomplete\n  } = api;\n  const [UUID, setUUID] = useState();\n\n  useEffect(()=>{\n    const uuidv4 = uuid.v4()\n    setUUID(uuidv4);\n    return () => {\n      setUUID(null);\n    };\n  },[]);\n\n\n  useEffect(() => {\n    if (settingsdata.settings) {\n      setSettings(settingsdata.settings);\n    }\n  }, [settingsdata.settings]);\n\n  const fetch = useMemo(\n    () => throttle(async (searchKeyword, callback) => {\n      if (searchKeyword) {\n        const results = await fetchPlacesAutocomplete(searchKeyword, UUID);\n        callback(results || []);\n      }\n    }, 200),\n    [fetchPlacesAutocomplete]\n  );\n\n  useEffect(() => {\n    let active = true;\n\n    if (inputValue === '') {\n      setOptions(value ? [value] : []);\n      return;\n    }\n\n    fetch(inputValue, (results) => {\n      if (active) {\n        let newOptions = value ? [value] : [];\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue, fetch]);\n\n  return (\n    <Autocomplete\n      style={props.style}\n      getOptionLabel={(option) => (typeof option === 'string' ? option : option.description)}\n      filterOptions={(x) => x}\n      options={options}\n      autoComplete\n      includeInputInList\n      filterSelectedOptions\n      value={props.value}\n      onChange={(event, newValue) => {\n        setOptions(newValue ? [newValue, ...options] : options);\n        setValue(newValue);\n        if (newValue && newValue.place_id) {\n          geocodeByPlaceId(newValue.place_id)\n            .then(results => {\n              if (results.length > 0) {\n                newValue.coords = { lat: results[0].geometry.location.lat(), lng: results[0].geometry.location.lng() };\n                newValue.placeDetails = results[0];\n              }\n              props.onChange(newValue);\n            })\n            .catch(() => alert(t('google_places_error')));\n        } else {\n          props.onChange(newValue);\n        }\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={props.placeholder}\n          variant={props.variant}\n          className={[isRTL ? classes.inputRtl : '', classes.textField].join(\" \")}\n          fullWidth\n        />\n      )}\n      renderOption={(props, option) => (\n        <li {...props}>\n          <Grid container alignItems=\"center\">\n            <Grid item sx={{ display: 'flex', width: 44 }}>\n              <LocationOnIcon sx={{ color: 'text.secondary' }} />\n            </Grid>\n            <Grid item sx={{ width: 'calc(100% - 44px)', wordWrap: 'break-word' }}>\n              <Typography variant=\"body1\" sx={{ fontFamily: FONT_FAMILY }}>\n                {option.description || \"No description\"}\n              </Typography>\n            </Grid>\n          </Grid>\n        </li>\n      )}\n    />\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}